<?xml version="1.0"?>
<doc>
    <assembly>
        <name>healthclinic_webapi</name>
    </assembly>
    <members>
        <member name="M:healthclinic_webapi.Controllers.ClinicaController.Cadastrar(healthclinic_webapi.Domains.Clinica)">
            <summary>
            Cadastra uma nova clinica
            </summary>
            <param name="clinica">Nova clinica</param>
            <returns>Retorna status code 201</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ClinicaController.Deletar(System.Guid)">
            <summary>
            Deleta uma clinica 
            </summary>
            <param name="id">Id da clinica que sera deletada</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Cadastrar(healthclinic_webapi.Domains.Consulta)">
            <summary>
            Cadastra uma consulta
            </summary>
            <param name="consulta">Nova consulta</param>
            <returns>Retorna status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.ListarTodos">
            <summary>
            Lista todas as consultas
            </summary>
            <returns>Retorna lista com as consultas</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.ListarPorPaciente(System.Guid)">
            <summary>
            Lista todas as consultas de um paciente
            </summary>
            <param name="idPaciente">Id do paciente</param>
            <returns>Retorna lista com as consultas do paciente</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.ListarPorMedico(System.Guid)">
            <summary>
            Lista todas as consultas de um medico
            </summary>
            <param name="idMedico">Id do medico</param>
            <returns>Retorna lista com as consultas do medico</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Deletar(System.Guid)">
            <summary>
            Deleta uma consulta
            </summary>
            <param name="id">Id da consulta</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Atualizar(System.Guid,healthclinic_webapi.Domains.Consulta)">
            <summary>
            Atualiza uma consulta
            </summary>
            <param name="id">Is da consulta</param>
            <param name="consulta">Novos dados</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EnderecoController.#ctor">
            <summary>
            Chama um endereco repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EnderecoController.Cadastrar(healthclinic_webapi.Domains.Endereco)">
            <summary>
            Cadastra um  novo endereco
            </summary>
            <param name="endereco">Novo endereco</param>
            <returns>Retorna status code 201</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EnderecoController.Deletar(System.Guid)">
            <summary>
            Deleta um enderco
            </summary>
            <param name="id">Id do endereco que sera deletado</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.#ctor">
            <summary>
            Chama repository de especialidade
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.Cadastrar(healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Cadastra uma nova especialidade
            </summary>
            <param name="especialidade">Nova especialidade</param>
            <returns>Retorna status code 201</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.Deletar(System.Guid)">
            <summary>
            Deleta uma especialidade
            </summary>
            <param name="id">Id da especialidade que sera deletada</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.FeedbackController.#ctor">
            <summary>
            Chama os metodos
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.FeedbackController.Cadastrar(healthclinic_webapi.Domains.Feedback)">
            <summary>
            Cadastra um novo feedback
            </summary>
            <param name="feedback">Novo feedback</param>
            <returns>Retorna status code 201</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.FeedbackController.Atualizar(System.Guid,healthclinic_webapi.Domains.Feedback)">
            <summary>
            Atualiza um feedback
            </summary>
            <param name="id">Id do feedback que sera atualizado</param>
            <param name="feedback">Novos dados</param>
            <returns>Retorna status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.FeedbackController.Deletar(System.Guid)">
            <summary>
            Deleta um feedback
            </summary>
            <param name="id">Id do feedback que sera deletado</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.MedicoController.Cadastrar(healthclinic_webapi.Domains.Medico)">
            <summary>
            Cadastra um novo medico
            </summary>
            <param name="medico">Novo medico</param>
            <returns>Status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.MedicoController.Listar">
            <summary>
            Lista todos os medicos
            </summary>
            <returns>Retorna status code 200 com a lista de medicos</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.MedicoController.Atualizar(System.Guid,healthclinic_webapi.Domains.Medico)">
            <summary>
            Atualiza um medico
            </summary>
            <param name="id">Id do medico</param>
            <param name="medico">Novos dados</param>
            <returns>Retorna status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.MedicoController.Deletar(System.Guid)">
            <summary>
            Deleta um medico
            </summary>
            <param name="id">Id do novo medico</param>
            <returns>Retorna status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.#ctor">
            <summary>
            Chama a classe com os metodos
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.Cadastrar(healthclinic_webapi.Domains.Paciente)">
            <summary>
            Cadastra um paciente
            </summary>
            <param name="paciente">Novo paciente</param>
            <returns>Retorna status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.Listar">
            <summary>
            Lista todos os pacientes
            </summary>
            <returns>Retorna uma lista com todos os pacientes</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.Atualizar(System.Guid,healthclinic_webapi.Domains.Paciente)">
            <summary>
            Atualiza um paciente
            </summary>
            <param name="id">Id do paciente que sera atualizado</param>
            <param name="paciente">Novos dados</param>
            <returns>Retorna um status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.Deletar(System.Guid)">
            <summary>
            Deleta um paciente
            </summary>
            <param name="id">Id do usuario que sera deletado</param>
            <returns></returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PerfilController.Cadastrar(healthclinic_webapi.Domains.Perfil)">
            <summary>
            cadastra um novo perfil
            </summary>
            <param name="perfil">Perfil que sera cadastrado</param>
            <returns>Retorna status code 201s</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PerfilController.Atualizar(System.Guid,healthclinic_webapi.Domains.Perfil)">
            <summary>
            Atualiza um perfil
            </summary>
            <param name="id">Id do perfil que sera atualizado</param>
            <param name="perfil">Novos dados de perfil</param>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PerfilController.Deletar(System.Guid)">
            <summary>
            Deleta um perfil
            </summary>
            <param name="id">Id do perfil que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ProntuarioController.Cadastrar(healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Cadastra um novo prontuario
            </summary>
            <param name="prontuario">Novo prontuario</param>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ProntuarioController.Atualizar(System.Guid,healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Atualiza um prontuario
            </summary>
            <param name="id">Id do prontuario que sera atualizado</param>
            <param name="prontuario">Novos dados de prontuario</param>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ProntuarioController.Deletar(System.Guid)">
            <summary>
            Deleta um prontuario
            </summary>
            <param name="id">Id do prontuario que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.Cadastrar(healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Cadastra um tipo de usuario
            </summary>
            <param name="tiposUsuario">Novo tipo de usuario</param>
            <returns>Status code 200</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.Deletar(System.Guid)">
            <summary>
            Deleta um tipo de usuario
            </summary>
            <param name="id">Id do tipo de usuario</param>
            <returns>Retona status code 204</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.#ctor">
            <summary>
            Chama o repository de usuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.Cadastrar(healthclinic_webapi.Domains.Usuario)">
            <summary>
            Cadastra um usuario
            </summary>
            <param name="usuario">Novo usuario</param>
            <returns>Retorna status code 201</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.Deletar(System.Guid)">
            <summary>
            Deleta um usuario
            </summary>
            <param name="id">Id do usuario que sera deletado</param>
            <returns></returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IClinicaRepository">
            <summary>
            interface de Clinica
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IClinicaRepository.Cadastrar(healthclinic_webapi.Domains.Clinica)">
            <summary>
            Cadastra uma clinica
            </summary>
            <param name="clinica">Nova clinica</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IClinicaRepository.Deletar(System.Guid)">
            <summary>
            Deleta uma clinica existente
            </summary>
            <param name="id">Id da Clinica que sera deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Cadastrar(healthclinic_webapi.Domains.Consulta)">
            <summary>
            Cadastra uma nova consulta 
            </summary>
            <param name="consulta">Nova consulta</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Listar">
            <summary>
            Lista todas as consultas 
            </summary>
            <returns>retorna lista com as consultas</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Consulta)">
            <summary>
            atualiza uma consulta
            </summary>
            <param name="id">Id da consulta que sera atualizada</param>
            <param name="consulta">Novos dados de consulta</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Delete(System.Guid)">
            <summary>
            Deleta uma consulta
            </summary>
            <param name="id">Id da consulta que sera deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.BuscarPorIdMedico(System.Guid)">
            <summary>
            Busca por todas as consultas de um medico
            </summary>
            <param name="id">Id do medico</param>
            <returns>Retorna lista com todas as consultas de um medico</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.BuscarPorIdPaciente(System.Guid)">
            <summary>
            Busca por todas as consultas de um medico
            </summary>
            <param name="id">Id do paciente</param>
            <returns>Retorna lista com todas as consultas de um paciente</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IEnderecoRepository">
            <summary>
            Interface de endereco
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEnderecoRepository.Cadastrar(healthclinic_webapi.Domains.Endereco)">
            <summary>
            Cadastra um endereco
            </summary>
            <param name="endereco">Novo endereco</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEnderecoRepository.Deletar(System.Guid)">
            <summary>
            Deleta um endereco
            </summary>
            <param name="id">Id do endereco que sera deletado</param>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IEspecialidadeRepository">
            <summary>
            Interface de especialidade
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.Cadastrar(healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Cadastra uma nova especialidade
            </summary>
            <param name="especialidade">Nova especialidade</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.Deletar(System.Guid)">
            <summary>
            Deleta uma especialidade
            </summary>
            <param name="id">Id da especialidade que sera deletada</param>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IFeedbackRepository">
            <summary>
            Interface de feedback
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IFeedbackRepository.Cadastrar(healthclinic_webapi.Domains.Feedback)">
            <summary>
            Cadastra novo feedback
            </summary>
            <param name="feedback">Novo feedback</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IFeedbackRepository.Deletar(System.Guid)">
            <summary>
            Deleta um feedback
            </summary>
            <param name="id">Id do feedback que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IFeedbackRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Feedback)">
            <summary>
            Atualiza um feedback
            </summary>
            <param name="id">Id do feedback que sera atualizado</param>
            <param name="feedback">Novos dados</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IMedicoRepository.Cadastrar(healthclinic_webapi.Domains.Medico)">
            <summary>
            Cadastra um novo medico
            </summary>
            <param name="medico">Novo medico</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IMedicoRepository.Listar">
            <summary>
            Lista todos os medicos
            </summary>
            <returns>Retorna lista com os medicos</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IMedicoRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Medico)">
            <summary>
            Atualiza um medico
            </summary>
            <param name="id">Id do medico</param>
            <param name="medico">Novos dados</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IMedicoRepository.Delete(System.Guid)">
            <summary>
            Deleta um medico
            </summary>
            <param name="id">Id do medico</param>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IPacienteRepository">
            <summary>
            Interface de paciente
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPacienteRepository.Cadastrar(healthclinic_webapi.Domains.Paciente)">
            <summary>
            Cadastra um novo paciente
            </summary>
            <param name="paciente">Novo paciente</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPacienteRepository.ListarTodos">
            <summary>
            Lista todos os pacientes
            </summary>
            <returns>Retorna lista com os pacientes</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPacienteRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Paciente)">
            <summary>
            Atualiza um paciente
            </summary>
            <param name="id">Id do paciente que sera atualizado</param>
            <param name="paciente">Novos dados de paciente</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPacienteRepository.Delete(System.Guid)">
            <summary>
            Deleta um paciente
            </summary>
            <param name="id">Id do paciente que sera deletado</param>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IPerfilRepository">
            <summary>
            Interface de perfil
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPerfilRepository.Cadastrar(healthclinic_webapi.Domains.Perfil)">
            <summary>
            Cadastra um novo perfil
            </summary>
            <param name="perfil">Novo perfil</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPerfilRepository.Deletar(System.Guid)">
            <summary>
            Deleta um perfil
            </summary>
            <param name="id">Id do perfil que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPerfilRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Perfil)">
            <summary>
            Atualiza um perfil
            </summary>
            <param name="id">Id do perfil que sera atualizado</param>
            <param name="perfil">Novos dados de perfil</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPerfilRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um perfil por email e senha
            </summary>
            <param name="email">email digitado</param>
            <param name="senha">senha digitada</param>
            <returns>retorna o perfil buscado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IProntuarioRepository">
            <summary>
            Interface de prontuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.Cadastrar(healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Cadastra um novo prontuario
            </summary>
            <param name="prontuario">Novo prontuario</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um prontuario
            </summary>
            <param name="id">Id do prontuario que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Atualiza um prontuario
            </summary>
            <param name="id">Id do prontuario que sera atualizado</param>
            <param name="prontuario">Novos dados de prontuario</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.Cadastrar(healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Cadastra um tipo de usuario
            </summary>
            <param name="tiposUsuario">Novo tipo de usuario</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um tipo de usuario
            </summary>
            <param name="id">Id do tipo de usuario</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IUsuarioRepository.Cadastrar(healthclinic_webapi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuario
            </summary>
            <param name="usuario">Novo usuario</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IUsuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um usuario
            </summary>
            <param name="id">Id do usuario que sera deletado</param>
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB1">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB2">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB2.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB2.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB2.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB4">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB4.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB4.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB4.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB5">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB5.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB5.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB5.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB6">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB6.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB6.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB6.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB7">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB7.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB7.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB7.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB8">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB8.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB8.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB8.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB9">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB9.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB9.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB9.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB10">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB10.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB10.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB10.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB11">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB11.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB11.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB11.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.DB12">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB12.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB12.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.DB12.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Repositories.ClinicaRepository">
            <summary>
            Classe com os metodos da clinica
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ClinicaRepository.Cadastrar(healthclinic_webapi.Domains.Clinica)">
            <summary>
            Cadastra uma clinica
            </summary>
            <param name="clinica">Nova clinica</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ClinicaRepository.Deletar(System.Guid)">
            <summary>
            Deleta uma clinica existente
            </summary>
            <param name="id">Id da Clinica que sera deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Consulta)">
            <summary>
            atualiza uma consulta
            </summary>
            <param name="id">Id da consulta que sera atualizada</param>
            <param name="consulta">Novos dados de consulta</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.BuscarPorIdMedico(System.Guid)">
            <summary>
            Busca por todas as consultas de um medico
            </summary>
            <param name="id">Id do medico</param>
            <returns>Retorna lista com todas as consultas de um medico</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.BuscarPorIdPaciente(System.Guid)">
            <summary>
            Busca por todas as consultas de um medico
            </summary>
            <param name="id">Id do paciente</param>
            <returns>Retorna lista com todas as consultas de um paciente</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Cadastrar(healthclinic_webapi.Domains.Consulta)">
            <summary>
            Cadastra uma nova consulta 
            </summary>
            <param name="consulta">Nova consulta</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Delete(System.Guid)">
            <summary>
            Deleta uma consulta
            </summary>
            <param name="id">Id da consulta que sera deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Listar">
            <summary>
            Lista todas as consultas 
            </summary>
            <returns>retorna lista com as consultas</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.EnderecoRepository">
            <summary>
            Classe com os metodos de endereco
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EnderecoRepository.#ctor">
            <summary>
            Instancia a context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EnderecoRepository.Cadastrar(healthclinic_webapi.Domains.Endereco)">
            <summary>
            Cadastra um endereco
            </summary>
            <param name="endereco">Novo endereco</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EnderecoRepository.Deletar(System.Guid)">
            <summary>
            Deleta um endereco
            </summary>
            <param name="id">Id do endereco que sera deletado</param>
        </member>
        <member name="T:healthclinic_webapi.Repositories.EspecialidadeRepository">
            <summary>
            Classe com os metodos de especialidade
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.#ctor">
            <summary>
            Chama a context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.Cadastrar(healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Cadastra uma nova especialidade
            </summary>
            <param name="especialidade">Nova especialidade</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.Deletar(System.Guid)">
            <summary>
            Deleta uma especialidade
            </summary>
            <param name="id">Id da especialidade que sera deletada</param>
        </member>
        <member name="T:healthclinic_webapi.Repositories.FeedbackRepository">
            <summary>
            Classe com metodos de feedback
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.#ctor">
            <summary>
            Chama o contexto
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Feedback)">
            <summary>
            Atualiza um feedback
            </summary>
            <param name="id">Id do feedback que sera atualizado</param>
            <param name="feedback">Novos dados</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.Cadastrar(healthclinic_webapi.Domains.Feedback)">
            <summary>
            Cadastra novo feedback
            </summary>
            <param name="feedback">Novo feedback</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.Deletar(System.Guid)">
            <summary>
            Deleta um feedback
            </summary>
            <param name="id">Id do feedback que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Medico)">
            <summary>
            Atualiza um medico
            </summary>
            <param name="id">Id do medico</param>
            <param name="medico">Novos dados</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.Cadastrar(healthclinic_webapi.Domains.Medico)">
            <summary>
            Cadastra um novo medico
            </summary>
            <param name="medico">Novo medico</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.Delete(System.Guid)">
            <summary>
            Deleta um medico
            </summary>
            <param name="id">Id do medico</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.Listar">
            <summary>
            Lista todos os medicos
            </summary>
            <returns>Retorna lista com os medicos</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.#ctor">
            <summary>
            Chama context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Paciente)">
            <summary>
            Atualiza um paciente
            </summary>
            <param name="id">Id do paciente que sera atualizado</param>
            <param name="paciente">Novos dados de paciente</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.Cadastrar(healthclinic_webapi.Domains.Paciente)">
            <summary>
            Cadastra um novo paciente
            </summary>
            <param name="paciente">Novo paciente</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.Delete(System.Guid)">
            <summary>
            Deleta um paciente
            </summary>
            <param name="id">Id do paciente que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.ListarTodos">
            <summary>
            Lista todos os pacientes
            </summary>
            <returns>Retorna lista com os pacientes</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.PerfilRepository">
            <summary>
            Classe com os metodos de perfil
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PerfilRepository.#ctor">
            <summary>
            Chama a context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PerfilRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Perfil)">
            <summary>
            Atualiza um perfil
            </summary>
            <param name="id">Id do perfil que sera atualizado</param>
            <param name="perfil">Novos dados de perfil</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PerfilRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Busca um perfil por email e senha
            </summary>
            <param name="email">email digitado</param>
            <param name="senha">senha digitada</param>
            <returns>retorna o perfil buscado</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PerfilRepository.Cadastrar(healthclinic_webapi.Domains.Perfil)">
            <summary>
            Cadastra um novo perfil     
            </summary>
            <param name="perfil">Novo perfil</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PerfilRepository.Deletar(System.Guid)">
            <summary>
            Deleta um perfil
            </summary>
            <param name="id">Id do perfil que sera deletado</param>
        </member>
        <member name="T:healthclinic_webapi.Repositories.ProntuarioRepository">
            <summary>
            Classe com metodos de prontuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.#ctor">
            <summary>
            Chama o contexto
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Atualiza um prontuario
            </summary>
            <param name="id">Id do prontuario que sera atualizado</param>
            <param name="prontuario">Novos dados de prontuario</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.Cadastrar(healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Cadastra um novo prontuario
            </summary>
            <param name="prontuario">Novo prontuario</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um prontuario
            </summary>
            <param name="id">Id do prontuario que sera deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.Cadastrar(healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Cadastra um tipo de usuario
            </summary>
            <param name="tiposUsuario">Novo tipo de usuario</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um tipo de usuario
            </summary>
            <param name="id">Id do tipo de usuario</param>
        </member>
        <member name="T:healthclinic_webapi.Repositories.UsuarioRepository">
            <summary>
            Classe com os metodos de usuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.#ctor">
            <summary>
            Chama a context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.Cadastrar(healthclinic_webapi.Domains.Usuario)">
            <summary>
            Cadastra um novo usuario
            </summary>
            <param name="usuario">Novo usuario</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.Deletar(System.Guid)">
            <summary>
            Deleta um usuario
            </summary>
            <param name="id">Id do usuario que sera deletado</param>
        </member>
    </members>
</doc>
